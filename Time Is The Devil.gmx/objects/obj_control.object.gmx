<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_instanceMap = ds_grid_create(3, 0);
ini_open(working_directory + "Map.ini");
ds_grid_read(_instanceMap, ini_read_string("Save", "THIS", ""));
ini_close();

_mapHeight = 500; //Height of the room map

_baseSpeed = 8;
_timeScale = 1;
_timeScaleTimer = 100;

_movementSpeed = _baseSpeed * _timeScale;

_radius = 1024;

_distance = 2 * 3.14 * _radius;

for(var i =0; i &lt; ds_grid_height(_instanceMap); i++)
{
    _xx = ds_grid_get(_instanceMap, 0, i);
    _yy = _mapHeight - ds_grid_get(_instanceMap, 1, i);
    _angle = - (_xx / _distance) * 360 + 90;
    
    inst = instance_create(room_width/2 + lengthdir_x(_radius + _yy, _angle), room_height/2 + lengthdir_y(1024 + _yy, _angle), obj_tile);
    inst._yy = _yy;
    inst._angle = _angle;
    inst.sprite_index = ds_grid_get(_instanceMap, 2, i);
}

_angleSpeed = 360 / (_distance / _movementSpeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_movementSpeed = _baseSpeed * _timeScale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_text(view_xview, view_yview,string(instance_number(obj_tile)));

draw_set_color(c_dkgray);
draw_rectangle(room_width/2 - 256, 720, room_width/2 + 256, 736, 0);
draw_set_color(c_white);
draw_rectangle(room_width/2 - (_timeScaleTimer / 100) * 256, 720, room_width/2, 736, 0);
draw_rectangle(room_width/2 + (_timeScaleTimer / 100) * 256, 720, room_width/2, 736, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
