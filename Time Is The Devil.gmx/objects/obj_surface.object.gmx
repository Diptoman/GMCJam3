<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_clock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_angle &gt;= 0)
{
    image_angle += obj_control._angleSpeed * obj_control._timeScale;
}
else
{
    image_angle = 0;
    obj_control._timeScale = 1;
    obj_main._isDead = false;
    obj_main._isStopped = false;
    
    obj_control._movementSpeed = obj_control._baseSpeed * obj_control._timeScale;
    obj_control._angleSpeed = 360 / (obj_control._distance / obj_control._movementSpeed);
    
    for(i = 0; i &lt; instance_number(obj_spikeFloor); i ++)
    {
        inst = instance_find(obj_spikeFloor, i);
        inst.x = inst._xStart;
        inst.y = inst._yStart;
        inst._angle = inst._baseAngle;
    }
    
    for(i = 0; i &lt; instance_number(obj_spikeCeil); i ++)
    {
        inst = instance_find(obj_spikeCeil, i);
        inst.x = inst._xStart;
        inst.y = inst._yStart;
        inst._angle = inst._baseAngle;
    }
    
    for(i = 0; i &lt; instance_number(obj_tile); i ++)
    {
        inst = instance_find(obj_tile, i);
        inst.x = inst._xStart;
        inst.y = inst._yStart;
        inst._angle = inst._baseAngle;
    }
    
    for(i = 0; i &lt; instance_number(obj_question); i ++)
    {
        inst = instance_find(obj_question, i);
        inst.x = inst._xStart;
        inst.y = inst._yStart;
        inst._angle = inst._baseAngle;
    }
    
    for(i = 0; i &lt; instance_number(obj_jumpPad); i ++)
    {
        inst = instance_find(obj_jumpPad, i);
        inst.x = inst._xStart;
        inst.y = inst._yStart;
        inst._angle = inst._baseAngle;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
