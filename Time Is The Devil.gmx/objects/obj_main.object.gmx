<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_isDead = false;
_isStopped = false;
_isSliding = false;

_vSpd = 0;
_grav = .5;
_jSpd = 12;
_jumps = 2;

alarm[0] = 15;

_canJumpPad = false;

xx = x;
yy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control._timeScale = -16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!_isStopped) &amp;&amp; (!_isDead)
{
    inst = instance_create(x,y,obj_mainShadow);
    inst.sprite_index = sprite_index;
    inst.image_index = image_index;
    alarm[0] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var jkey = keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("Z"));
var jkey_held = keyboard_check(vk_up) || keyboard_check(ord("Z"));
var skey_held = keyboard_check(vk_down) || keyboard_check(ord("X"));
var tkey_held = keyboard_check(vk_space);

//Update image speed
image_speed = .0625 * obj_control._movementSpeed;

if (!_isDead) &amp;&amp; (!_isStopped)
{
    //Time
    if (tkey_held)
    {
        if (obj_control._timeScaleTimer &gt; 0)
        {
            obj_control._timeScale = .5;
            obj_control._timeScaleTimer -= 1;
        }
        else
        {
            obj_control._timeScale = 1;
            obj_control._timeScaleTimer = 0;
        }
    }
    else
    {
        obj_control._timeScale = 1;
        if (obj_control._timeScaleTimer &lt; 100)
            obj_control._timeScaleTimer += .3;
        else
            obj_control._timeScaleTimer = 100;
    }
    
    //Slide stopping
    if (!skey_held)
    {
        _isSliding = false;
    }

    // Check for ground
    if (place_meeting(x,y+1,obj_solid)) 
    {
        _vSpd=0;
        _jumps = 2;
        instance_create(x - 8 + random(16),y - 4 + random(8),obj_groundParticle);
        
        if (jkey)
        {
            _vSpd=-_jSpd;
            if (!_canJumpPad)
                _jumps -= 1;
                
            if (_canJumpPad)
            {
                for(i = 0; i &lt; 30; i++)
                {
                    instance_create(x, y, obj_jumpPadParticle);
                }
            }
            
            if (_isSliding)
                _isSliding = false;
            
        }
        else if (skey_held)
        {
            _isSliding = true;
        }
    } 
    else 
    {
        //Double jump
        if (jkey) &amp;&amp; (_jumps &gt; 0)
        {
            _vSpd=-_jSpd;
            
            if (!_canJumpPad)
                _jumps -= 1;
                
            if (_canJumpPad)
            {
                for(i = 0; i &lt; 30; i++)
                {
                    instance_create(x, y, obj_jumpPadParticle);
                }
            }
            
            //Parts
            for(var i=0; i &lt; 10; i++)
            {
                instance_create(x - 32 + random(64),y - 8 + random(16),obj_groundParticle);
            }
        }
        else if (jkey) &amp;&amp; (_jumps == 0)
        {
            if (_canJumpPad)
            {
                _vSpd=-_jSpd;
            
                //Parts
                for(var i=0; i &lt; 10; i++)
                {
                    instance_create(x - 32 + random(64),y - 8 + random(16),obj_groundParticle);
                }
                
                for(i = 0; i &lt; 30; i++)
                {
                    instance_create(x, y, obj_jumpPadParticle);
                }
            }
        }
        
        // Gravity
        if (_vSpd &lt; 10)
        {
            _vSpd+=_grav;
        }
        
        if (_vSpd&lt;0) &amp;&amp; (!jkey_held)
        {
            _vSpd = max(_vSpd,_vSpd+1);
        }
    }
    
    if (_vSpd!=0)
    {
        if (_vSpd &lt; 0)
            sprite_index = spr_main_jump;
        else
            sprite_index = spr_main_fall;
    }
    else
    {
        if (!_isSliding)
            sprite_index = spr_main_run;
        else
            sprite_index = spr_main_slide;
    }
    
    
    // Vertical collisions
    if (place_meeting(x,y+_vSpd,obj_solid)) 
    {
        while (!place_meeting(x,y+sign(_vSpd),obj_solid)) 
        {
            y+=sign(_vSpd);
        }
        _vSpd=0;
    }

    // Move vertically
    y+=_vSpd;
    
    // Horizontal collisions
    if (place_meeting(x,y,obj_solid)) 
    {
        scr_die();
    }
}
else if (_isStopped)
{
    sprite_index = spr_main_stand;
    image_speed = .15;
    
    if (!place_meeting(x,y+1,obj_solid)) 
    {
        // Gravity
        if (_vSpd &lt; 10)
        {
            _vSpd+=_grav;
        }
    }
    
    
    // Vertical collisions
    if (place_meeting(x,y+_vSpd,obj_solid)) 
    {
        while (!place_meeting(x,y+sign(_vSpd),obj_solid)) 
        {
            y+=sign(_vSpd);
        }
        _vSpd=0;
    }

    // Move vertically
    y+=_vSpd;
}

_canJumpPad = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!_isDead) &amp;&amp; (!_isStopped)
{
    if (alarm[0] &lt; 0)
        alarm[0] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_isDead)
{
    visible = false;
}
else
{
    visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_jumpPad">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!_isDead) &amp;&amp; (!_isStopped)
{
    _canJumpPad = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_questionRare">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_question">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!_isDead) &amp;&amp; (!_isStopped)
{
    if (other._interactible)
    {
        if (ds_list_size(obj_control._availableQuestions) &gt; 0)
        {
            pos = floor(random(ds_list_size(obj_control._availableQuestions) - 1));
            question = ds_list_find_value(obj_control._availableQuestions, pos);
            //Delete from Available Questions
            ds_list_delete(obj_control._availableQuestions, pos);
            //Add to Collected Questions
            ds_list_add(obj_control._collectedQuestions, question);
        }

        other._interactible = false;
        
        for(i = 0; i &lt; 50; i++)
        {
            instance_create(other.x, other.y, obj_questionPieces);
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spikeCeil">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_die();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spikeFloor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_die();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
